import com.learning.student.validationservice.persistance.model.Student
import com.learning.student.validationservice.persistance.model.Address
import com.learning.student.validationservice.persistance.model.Grade
import com.learning.student.validationservice.persistance.model.Mark
import java.util.*

import static com.learning.student.validationservice.service.util.ValidationCalculator.isAverageBelowFive;

global com.learning.student.validationservice.service.util.CustomMessages messages

dialect "java"

rule "Student has non-null address."
    when
        Student($address: address != null)
        Address(street == null || number == null || country == null || city == null
        || street == "" || number == "" || country == "" || city == "") from $address;
    then
        messages.addMessage("address", "Address is invalid.", "At least one property is null or empty." );
end

rule "Student has non-null dateOfBirth."
    when
        Student(dateOfBirth == null || dateOfBirth == "");
    then
        messages.addMessage("dateOfBirth", "Birthdate is invalid.", "dateOfBirth field is null or empty." );
end

rule "Student has non-null firstname."
    when
        Student(firstName == null || firstName == "");
    then
        messages.addMessage("firstName", "Firstname is invalid.", "firstName field is null or empty." );
end

rule "Student has non-null lastname."
    when
        Student(lastName == null || lastName == "");
    then
        messages.addMessage("lastName", "Lastname is invalid.", "lastName field is null or empty." );
end

rule "Student has an average of 5 per subject."
    when
        $student: Student($grades: grades != null)
        eval(isAverageBelowFive($grades) == true)
    then
        messages.addMessage("grades", "Grade average below 5.", "There is at least one subject for which the average is below 5." );
end


